name: Build
on:
  push:
  repository_dispatch:
jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        tags:
          - "latest, bionic, 1804"
          - "xenial, 1604"
          - "focal, 2004"
          - "latest-slim, bionic-slim, 1804-slim"
          - "xenial-slim, 1604-slim"
          - "focal-slim, 2004-slim"
        include:
          -  tags: "latest, bionic, 1804"
             build_args: "type=full"
             base: "ubuntu:bionic"
          -  tags: "xenial, 1604"
             build_args: "type=full"
             base: "ubuntu:xenial"
          -  tags: "focal, 2004"
             build_args: "type=full"
             base: "ubuntu:focal"
          -  tags: "latest-slim, bionic-slim, 1804-slim"
             build_args: "type=slim"
             base: "ubuntu:bionic"
          -  tags: "xenial-slim, 1604-slim"
             build_args: "type=slim"
             base: "ubuntu:xenial"
          -  tags: "focal-slim, 2004-slim"
             build_args: "type=slim"
             base: "ubuntu:focal"
    runs-on: ubuntu-latest
    steps:        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Change base
        run: sed -i 's/ubuntu:bionic/${{ matrix.base }}/g' Dockerfile

      - name: Prep
        id: prep
        run: |
          tags=$(echo ${{ matrix.tags }} | awk 'BEGIN{FS=OFS=", "} NR==1{for (i=1;i<=NF;i++) $i="shivammathur/node:"$i} 1')
          key=$(echo -n "$tags" | openssl dgst -sha256 | cut -d ' ' -f 2)
          echo ::set-output name=tags::${tags}
          echo ::set-output name=key::${key}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: "${{ steps.prep.outputs.key }}-buildx-${{ github.sha }}"
          restore-keys: "${{ steps.prep.outputs.key }}-buildx-${{ github.sha }}"

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Build
        id: build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: ${{ matrix.build_args }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}
